@page "/hangman"
@using HangmanBlazor.Models;

<PageTitle>Hangman</PageTitle>

<h1>Let's Play Hangman!</h1>

@code {
    GameBoard newGame = new GameBoard();

    char[] abc = new char[] {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
}




@if(newGame.GuessQty <= 5 && @newGame.winStatus == "")
{
    <div class="board">
    <div class="gamepiece @newGame.Wrong(newGame.GuessQty)">
        
    </div>
</div>
    <p style="font-size: 30px;">@newGame.winStatus <br> @newGame.CheckedWord </p>
}
else if(newGame.GuessQty <= 5 && @newGame.winStatus != "")
{
    <div class="board">
    <div class="gamepiece win">
        
    </div>   
    </div>
    <p style="font-size: 30px;">@newGame.winStatus <br> @newGame.CheckedWord </p>
}

else if(newGame.GuessQty >= 6)
{
    <div class="board">
    <div class="gamepiece @newGame.Wrong(newGame.GuessQty)">
        
    </div>
    </div>
    <p style="font-size: 30px;">@newGame.winStatus <br><b>The correct answer was:</b> @newGame.Randomword</p>
}




@if(newGame.winStatus == ""){
@foreach(char letter in abc)
{
    int count = 0;
    /* if statement that only creates buttons if they are NOT in the guesses list */
    foreach(char x in newGame.guesses)
    {
        if(x != letter)
        {
            count++;
        }
        if(count == newGame.guesses.Count)
        {
            <button style="margin: 2px;" class="btn btn-primary" @onclick="@(() => newGame.AddChar(letter))">@letter</button> 
        }

    }
    }
        
        
    
}


<br><br>
<button class="btn btn-primary" @onclick="@(() => newGame.Reset())">New Game</button>



